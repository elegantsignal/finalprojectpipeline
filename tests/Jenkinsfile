pipeline {
    agent any

    environment {
        COMMIT = "$ghprbActualCommit"
    }

    stages {
        stage('clone main project') {
            steps {
                dir("tests") {
                    // sh "rm -rf m-sa2-10-19-app || true"
                    // sh "git clone https://github.com/elegantsignal/m-sa2-10-19-app.git"
                    sh "git -C m-sa2-10-19-app pull || git clone https://github.com/elegantsignal/m-sa2-10-19-app.git m-sa2-10-19-app"
                    // sh "chmod -R 777 m-sa2-10-19-app/.git"
                }
            }
        }

        stage('Copy test files') {
            steps {
                sh "cp docker/Dockerfile tests/m-sa2-10-19-app/Dockerfile"
                sh "cp docker/docker-compose.test.yml tests/m-sa2-10-19-app/docker-compose.yml"
                sh "cp tests/test.sh tests/m-sa2-10-19-app/test.sh"
            }
        }

        stage('docker-compose') {
            steps {
                dir("tests/m-sa2-10-19-app") {
                    sh "docker-compose rm -f && docker-compose up --force-recreate --build -d"
                }
            }
        }

        stage('copy tests') {
            steps {
                dir("tests") {
                    sh "docker cp test.sh app-test:/test.sh"
                }
            }
        }
        stage('run tests') {
            steps {
                dir("tests/m-sa2-10-19-app") {
                    sh "docker exec app-test /test.sh"
                }
            }
        }
    }

    post {
        always {
            dir("tests/m-sa2-10-19-app") {
                sh "docker-compose down || true"
            }
        }
    }

}
